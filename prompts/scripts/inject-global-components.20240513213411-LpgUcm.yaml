type: function
parameters:
  - id: eNNa4ycuDK1x30ujUDvOf
    key: dumpListText
    type: source
    source:
      variableFrom: knowledge
      knowledge:
        id: "443696818363039744"
        from: knowledge
        parameters:
          message: "{{message}}"
          searchAll: true
prompts:
  Uj0m-ctvoWgzA_IJFDPGu:
    index: 0
    data:
      type: message
      data:
        id: Uj0m-ctvoWgzA_IJFDPGu
        role: user
        content: "{{ question }}"
outputVariables:
  - id: FqmWDOp0hQ_abMK2scON4
    name: supportedList
    type: array
    description: ""
    required: true
    element:
      id: x42M3i6SUQPpF12afDzUn
      name: element
      type: string
      required: true
  - id: ZfTSAGszKYFiq13ycnKSq
    name: examplesList
    type: array
    required: true
    element:
      id: AI3TjwhK1rCjDy8ZGJ7Ku
      name: element
      type: string
      required: true
id: 20240513213411-LpgUcm
createdAt: 2024-05-13T13:34:11.700Z
updatedAt: 2024-05-13T13:34:11.700Z
createdBy: z1TCComgCJNHbHWetTWGdhPB6NYZ2ReDjLu
updatedBy: z1TCComgCJNHbHWetTWGdhPB6NYZ2ReDjLu
name: inject-global-components
code: >+
  let dumpList = [];


  try{
    dumpList = JSON.parse(dumpListText)
    dumpList = dumpList.map(item => {
      if(item.content){
        try{
          return JSON.parse(item.content)
        } catch (e){
          // ignore error
        }
      }
      return false
    }).filter(Boolean)
  } catch (e){
    // ignore error
    console.error(e)
  }


  console.log('dumpList count: ', dumpList.length)


  // filter empty 

  dumpList = dumpList.filter(({name, description, docs}) => {
    if(!name || !description || !docs){
      return false
    }
    return true
  })



  const supportedList = dumpList
    .map(({ name, description, docs }) => {
      return `${name}: ${description}, provided [${docs?.components?.join(', ')}] components`;
    });

  const examplesList = dumpList
    .map(({ name, docs }) => {
      let examplesText = "// No examples"

      if (docs?.examples?.length) {
        examplesText = docs?.examples?.map(({ source, code }, index) => {
          return `// [${index + 1}] ${source}
  ${code}`;
        }).join('\n');
      }
      return `${name} Examples: 
  \`\`\`tsx
    ${examplesText}
  \`\`\`

  `;
    }).filter(Boolean);

  // without examples and components

  const dumpListSimple = dumpList.map((item) => {
    const ytem = { ...item };
    // @ts-ignore
    ytem.docs = {
      import: ytem.docs?.import,
      export: ytem.docs?.export,
    };
    return ytem;
  });


  // eslint-disable-next-line no-console

  console.info('result: ', {
    supportedList,
    examplesList,
    dumpList,
    dumpListSimple,
  });


  // --------- protected code ---------


  return {
    supportedList: supportedList,
    examplesList: examplesList,
  }



